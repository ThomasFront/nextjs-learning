import Head from 'next/head'
import Link from 'next/link'
import { useState } from 'react'
import styles from '../styles/Home.module.scss'

type HomePageProps = {
  data: Array<{
    name: string,
    url: string
  }>,
  next: string | null,
  previous: string | null
}

export default function HomePage({ data, previous, next }: HomePageProps) {
  const [listOfPokemons, setListOfPokemons] = useState(data)
  const [nextPage, setNextPage] = useState(next)
  const [prevPage, setPrevPage] = useState(previous)

  const changeNextPage = async () => {
    if (nextPage) {
      const res = await fetch(nextPage as string)
      const data = await res.json()
      setNextPage(data.next)
      setListOfPokemons(data.results)
      setPrevPage(data.previous)
    }
  }

  const changePreviousPage = async () => {
    if (prevPage) {
      const res = await fetch(prevPage)
      const data = await res.json()
      setNextPage(data.next)
      setListOfPokemons(data.results)
      setPrevPage(data.previous)
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.list}>
          <h1>All pokemons</h1>
          {listOfPokemons.map(pokemon => {
            const id = pokemon.url.split('/')[6]
            return <Link href={`/${id}`} key={pokemon.name}>{pokemon.name}</Link>
          })}
        </div>
        <div className={styles.buttonContainer}>
          <button disabled={!prevPage} onClick={changePreviousPage}>prev</button>
          <button disabled={!nextPage} onClick={changeNextPage}>next</button>
        </div>
      </main>
    </>
  )
}

export async function getStaticProps() {
  const res = await fetch('https://pokeapi.co/api/v2/pokemon?limit=10&offset=0')
  // TYPOWANIE AS
  const data = await res.json()
  return {
    props: {
      data: data.results,
      next: data.next,
      previous: data.previous
    }
  }
}